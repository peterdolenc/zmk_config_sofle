/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&nice_view_spi { cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>; };

/ {
    combos {
        compatible = "zmk,combos";

        ESCP {
            bindings = <&kp ESC>;
            key-positions = <0 12>;
        };

        Lock {
            bindings = <&kp LG(LC(Q))>;
            key-positions = <0 11>;
        };

        sleep {
            bindings = <&kp K_POWER>;
            key-positions = <49 36>;
        };

        win-print-screen {
            bindings = <&kp LS(LC(X))>;
            key-positions = <11 23>;
        };

        caps-word {
            bindings = <&caps_word>;
            key-positions = <12 24>;
        };

        email {
            bindings = <&email>;
            key-positions = <2 3 4>;
        };

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <35 24>;
        };

        mac-print-screen {
            bindings = <&kp LS(LG(NUMBER_4))>;
            key-positions = <22 10>;
        };

        esc2 {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <10 11>;
        };
    };

    behaviors {
        hold_tap_keys: hold_tap_keys {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_KEYS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <35>;
        };

        hold_tap_layer: hold_tap_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <53 56>;
            tapping-term-ms = <180>;
        };

        sticky: sticky {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <2000>;
            ignore-modifiers;
            quick-release;
        };

        backspace_del: backspace_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_LCTL|MOD_LALT|MOD_RSFT)>;
        };
    };

    macros {
        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp M &kp A &kp I &kp L &kp RA(V) &kp P &kp E &kp T &kp E &kp R &kp D &kp O &kp L &kp E &kp N &kp C &kp DOT &kp S &kp I>;
            label = "EMAIL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";

            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp NUMBER_1        &kp N2  &kp N3    &kp N4                       &kp N5    &kp N6                                                    &kp N7                       &kp N8          &kp N9     &kp N0    &kp MINUS               &kp EQUAL
&kp TAB             &kp Q   &kp W     &kp E                        &kp R     &kp T                                                     &kp Y                        &kp U           &kp I      &kp O     &kp P                   &kp LEFT_BRACKET
&sticky LEFT_SHIFT  &kp A   &kp S     &kp D                        &kp F     &kp G                                                     &kp H                        &kp J           &kp K      &kp L     &hold_tap_layer 3 SEMI  &hold_tap_keys RIGHT_SHIFT NON_US_HASH
&kp LCTRL           &kp Z   &kp X     &kp C                        &kp V     &kp B                       &kp C_MUTE    &kp CAPSLOCK    &kp N                        &kp M           &kp COMMA  &kp DOT   &kp SLASH               &kp RIGHT
                            &kp LGUI  &hold_tap_layer 3 LG(LS(M))  &kp LALT  &hold_tap_layer 1 KP_ENTER  &kp SPACE     &backspace_del  &hold_tap_layer 1 RIGHT_ALT  &kp LEFT_ARROW  &kp UP     &kp DOWN
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        alt_gr_fn_layer {
            display-name = "Alt-Gr/FN";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // | `     |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | RAISE |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp F1  &kp F2            &kp F3            &kp F4          &kp F5      &kp F6                       &kp F7      &kp F8        &kp F9      &kp F10        &kp F11            &kp F12
&trans  &kp RA(Q)         &kp RA(W)         &kp RA(E)       &kp RA(N5)  &kp TILDE                    &kp RA(N7)  &kp GRAVE     &kp UP      &kp N9         &kp INSERT         &kp F12
&trans  &kp RA(NUMBER_1)  &kp RA(NUMBER_3)  &kp RA(D)       &kp RA(F)   &kp RA(G)                    &kp CARET   &kp LEFT      &kp DOWN    &kp RIGHT      &kp RA(SEMICOLON)  &kp RIGHT_SHIFT
&trans  &kp PERCENT       &kp RA(X)         &kp LEFT_BRACE  &kp RA(V)   &kp LA(B)  &trans    &trans  &kp RA(N)   &kp NUMBER_1  &kp INSERT  &kp RA(COMMA)  &kp RA(PERIOD)     &kp END
                          &trans            &trans          &trans      &trans     &trans    &trans  &trans      &kp HOME      &kp PG_UP   &kp PG_DN
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp C_AC_SCROLL_UP C_AC_SCROLL_DOWN>;
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &mkp MCLK  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &mkp RCLK  &kp KP_NUMBER_4  &mkp LCLK        &kp KP_NUMBER_6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans     &kp KP_N1        &kp KP_N2        &kp KP_NUMBER_3  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans     &mkp LCLK        &kp KP_N8        &mkp RCLK        &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans     &kp KP_NUMBER_4  &kp KP_NUMBER_2  &kp KP_NUMBER_6
            >;
        };

        navigation {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans     &trans    &trans    &trans     &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp PG_UP  &kp HOME  &kp UP    &kp END    &kp INSERT  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans     &trans    &trans    &trans     &trans      &kp RIGHT
                &trans  &trans  &trans  &trans  &trans    &trans  &trans     &kp LEFT  &kp UP    &kp DOWN
            >;
        };
    };
};
